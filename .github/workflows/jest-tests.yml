name: Server Tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      API_HOST: ${{ secrets.API_HOST }}
      MIGRATIONS_PATH: ${{ vars.MIGRATIONS_PATH }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      REFRESH_JWT_SECRET: ${{ secrets.REFRESH_JWT_SECRET }}
      ACCESS_JWT_SECRET: ${{ secrets.ACCESS_JWT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      CERTIFICATE_VALUE: ${{ secrets.CERTIFICATE_VALUE }}
    defaults:
      run:
        working-directory: server

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Docker using Docker's official script
        run: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
        continue-on-error: false
        
      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version
        continue-on-error: false

      - name: Install dependencies
        run: npm install

      - name: Unit Tests
        run: npm run unit-tests

      - name: Integration Tests Run
        run: npm run integration-tests
